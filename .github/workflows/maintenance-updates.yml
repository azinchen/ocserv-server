name: Maintenance - Automated Updates

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    # Run at 3 AM UTC daily to stagger the updates
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - packages
          - apk
      force_update:
        description: 'Force update MD files even if content unchanged'
        required: false
        default: false
        type: boolean

jobs:
  update-apk-packages:
    name: ðŸ“¦ Update APK Packages
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'apk' || github.event.inputs.update_type == '' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Update APK package versions
        id: update-apk
        run: |
          chmod +x ./scripts/update-apk-versions.sh
          ./scripts/update-apk-versions.sh Dockerfile

          UPDATE_DATE=$(date +%y%m%d)
          echo "update_date=${UPDATE_DATE}" >> $GITHUB_ENV
          echo "update_date=${UPDATE_DATE}" >> $GITHUB_OUTPUT

      - name: Create Pull Request for APK updates
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          branch: bot/update-apk-packages
          commit-message: "deps: update ${{ steps.update-apk.outputs.updated_count }} APK package(s) (${{ env.update_date }})"
          delete-branch: true
          title: "ðŸ“¦ Update APK packages - ${{ env.update_date }}"
          body: |
            ## ðŸ“¦ APK Package Updates
            
            **Date**: ${{ env.update_date }}
            **Packages updated**: ${{ steps.update-apk.outputs.updated_count }} of ${{ steps.update-apk.outputs.total_packages }} checked
            
            ### Updated Packages:
            ${{ steps.update-apk.outputs.packages_updated }}
            
            ### Changes:
            - Updated Alpine Linux package versions in Dockerfile
            - Maintained compatibility with existing configurations
            
            ---
            ðŸ¤– Auto-generated by [update-apk workflow](https://github.com/${{ github.repository }}/actions/workflows/maintenance-updates.yml)

  update-github-packages:
    name: ðŸ“‹ Update GitHub Package Versions
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'packages' || github.event.inputs.update_type == '' }}
    strategy:
      matrix:
        repository: ["just-containers/s6-overlay"]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Get latest version for ${{ matrix.repository }}
        id: get-version
        shell: bash
        run: |
          TAG=$(curl -Ls https://api.github.com/repos/${{ matrix.repository }}/tags | jq -r "first.name")
          PACKAGE_VERSION=${TAG:1}
          BRANCH_NAME="bot/update-$(echo '${{ matrix.repository }}' | sed 's/\//-/g')-${PACKAGE_VERSION}"

          echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_ENV
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "repo_name=$(echo '${{ matrix.repository }}' | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Update Dockerfile with new version
        shell: bash
        run: |
          ESCAPED_SEARCH=$(printf '%s\n' "${{ matrix.repository }}" | sed -e 's/[\/&]/\\&/g')
          sed -i "/.*${ESCAPED_SEARCH}.*/{n;s/.*/ENV PACKAGEVERSION=\"${{ env.package_version }}\"/}" Dockerfile

      - name: Create Pull Request for ${{ matrix.repository }}
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          branch: bot/${{ env.branch_name }}
          commit-message: "deps: bump ${{ env.repo_name }} to v${{ env.package_version }}"
          delete-branch: true
          title: "ðŸ“‹ Bump ${{ env.repo_name }} to v${{ env.package_version }}"
          body: |
            ## ðŸ“‹ Package Version Update
            
            **Repository**: [${{ matrix.repository }}](https://github.com/${{ matrix.repository }})
            **Version**: `${{ env.package_version }}`
            
            This PR updates the package version in the Dockerfile.
            
            ### Changes:
            - Updated `PACKAGEVERSION` environment variable
            - Bumped from previous version to `${{ env.package_version }}`
            
            ---
            ðŸ¤– Auto-generated by [update-packages workflow](https://github.com/${{ github.repository }}/actions/workflows/maintenance-updates.yml)

  update-ocserv-version:
    name: ðŸ”„ Update Ocserv Version
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'packages' || github.event.inputs.update_type == '' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Get latest ocserv version
        id: get-version
        shell: bash
        run: |
          TAG=$(curl -Ls https://gitlab.com/api/v4/projects/openconnect%2Focserv/repository/tags | jq -r ".[0].name")
          OCSERV_VERSION=${TAG#v}
          BRANCH_NAME="bot/update-ocserv-version"

          echo "ocserv_version=${OCSERV_VERSION}" >> $GITHUB_OUTPUT
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: Update Dockerfile with new ocserv version
        shell: bash
        run: |
          sed -i "s/ARG OCSERV_VERSION=.*/ARG OCSERV_VERSION=${{ steps.get-version.outputs.ocserv_version }}/" Dockerfile

      - name: Create Pull Request for ocserv update
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          branch: ${{ steps.get-version.outputs.branch_name }}
          commit-message: "deps: bump ocserv to v${{ steps.get-version.outputs.ocserv_version }}"
          delete-branch: true
          title: "ðŸ”„ Bump ocserv to v${{ steps.get-version.outputs.ocserv_version }}"
          body: |
            ## ðŸ”„ Ocserv Version Update
            
            **Repository**: [openconnect/ocserv](https://gitlab.com/openconnect/ocserv)
            **Version**: `${{ steps.get-version.outputs.ocserv_version }}`
            
            This PR updates the ocserv version in the Dockerfile.
            
            ### Changes:
            - Updated `OCSERV_VERSION` ARG in Dockerfile
            - Bumped from previous version to `${{ steps.get-version.outputs.ocserv_version }}`
            
            ---
            ðŸ¤– Auto-generated by [maintenance-updates workflow](https://github.com/${{ github.repository }}/actions/workflows/maintenance-updates.yml)
